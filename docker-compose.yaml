services:
  postgres:
    image: postgres:17.5
    container_name: sole-spot-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - sole-spot-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 20

  sole-spot:
    build:
      context: .
      dockerfile: Dockerfile
    image: sole-spot-app
    container_name: sole-spot-container
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    
    environment:
      K8: "YES"
      DOCKER: "${DOCKER:-YES}"   
      DB_HOST: postgres          
      DB_PORT: "5432"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URL: ${GOOGLE_REDIRECT_URL}
      SERVER_IP: ${SERVER_IP}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      SMTP_SENDER_EMAIL: ${SMTP_SENDER_EMAIL}
    networks:
      - sole-spot-net

volumes:
  postgres-data:

networks:
  sole-spot-net:
    driver: bridge
